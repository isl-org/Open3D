// ----------------------------------------------------------------------------
// -                        Open3D: www.open3d.org                            -
// ----------------------------------------------------------------------------
// Copyright (c) 2018-2024 www.open3d.org
// SPDX-License-Identifier: MIT
// ----------------------------------------------------------------------------

#pragma once

#include "open3d/utility/Helper.isph"

/// Set of known ISA targets.
enum ISATarget {
    /* x86 */
    SSE2 = 100,
    SSE4 = 101,
    AVX = 102,
    AVX2 = 103,
    AVX512KNL = 104,
    AVX512SKX = 105,
    /* ARM */
    NEON = 200,
    /* GPU */
    GENX = 300,
    /* Special values */
    UNKNOWN = -1
};

/// Properties of an ISA target.
struct ISAInfo {
    uniform ISATarget target;
    uniform int32_t width;
    uniform int32_t element_width;
};

/// Defines functions for querying properties of the selected ISA at runtime.
/// This can be useful in libraries or executables with ISPC source files which
/// are compiled with different sets of ISAs.
#define OPEN3D_DEFINE_ISA_INFO_GETTERS(prefix)                                 \
    export uniform ISATarget prefix##GetISATarget() {                          \
        return GetISATargetImpl();                                             \
    }                                                                          \
                                                                               \
    export uniform int32_t prefix##GetISAWidth() { return GetISAWidthImpl(); } \
                                                                               \
    export uniform int32_t prefix##GetISAElementWidth() {                      \
        return GetISAElementWidthImpl();                                       \
    }                                                                          \
                                                                               \
    export void prefix##GetISAInfo(uniform ISAInfo* uniform info) {            \
        info->target = prefix##GetISATarget();                                 \
        info->width = prefix##GetISAWidth();                                   \
        info->element_width = prefix##GetISAElementWidth();                    \
    }

static inline uniform ISATarget GetISATargetImpl() {
#if defined(ISPC_TARGET_SSE2)
    return SSE2;
#elif defined(ISPC_TARGET_SSE4)
    return SSE4;
#elif defined(ISPC_TARGET_AVX)
    return AVX;
#elif defined(ISPC_TARGET_AVX2)
    return AVX2;
#elif defined(ISPC_TARGET_AVX512KNL)
    return AVX512KNL;
#elif defined(ISPC_TARGET_AVX512SKX)
    return AVX512SKX;
#elif defined(ISPC_TARGET_NEON)
    return NEON;
#elif defined(ISPC_TARGET_GENX)
    return GENX;
#else
    return UNKNOWN;
#endif
}

static inline uniform int32_t GetISAWidthImpl() { return TARGET_WIDTH; }

static inline uniform int32_t GetISAElementWidthImpl() {
    return TARGET_ELEMENT_WIDTH * CHAR_BIT;
}
